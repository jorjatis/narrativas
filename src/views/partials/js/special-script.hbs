<script>
document.addEventListener("DOMContentLoaded", () => {
  const map = document.querySelector(".v-spc-map");
  const sections = Array.from(document.querySelectorAll(".v-spc-zone")); // <-- se usa tambiÃ©n para nav
  const mediaQuery = window.matchMedia("(min-width: 1395px)");
  let mapObserver = null;

  // --- Observador del mapa ---
  const createMapObserver = () => {
    if (!map || sections.length === 0) return;

    mapObserver = new IntersectionObserver((entries) => {
      const visible = entries.filter(e => e.isIntersecting);
      if (visible.length === 0) return;

      const topMost = visible.reduce((closest, entry) => {
        if (!closest) return entry;
        return entry.boundingClientRect.top < closest.boundingClientRect.top ? entry : closest;
      }, null);

      if (!topMost) return;

      const zoneClass = Array.from(topMost.target.classList)
        .find(c => c.startsWith("v-spc-zone--"));
      if (!zoneClass) return;

      const num = zoneClass.split("--")[1];

      Array.from(map.classList).forEach(c => {
        if (c.startsWith("v-spc-map--")) map.classList.remove(c);
      });

      map.classList.add(`v-spc-map--${num}`);
    }, {
      root: null,
      rootMargin: "0px",
      threshold: 0.25
    });

    sections.forEach(zone => mapObserver.observe(zone));
  };

  const destroyMapObserver = () => {
    if (mapObserver) {
      mapObserver.disconnect();
      mapObserver = null;
    }
  };

  const checkSticky = () => {
    if (mediaQuery.matches) {
      if (!mapObserver) createMapObserver();
    } else {
      destroyMapObserver();
      if (map) {
        Array.from(map.classList).forEach(c => {
          if (c.startsWith("v-spc-map--")) map.classList.remove(c);
        });
      }
    }
  };

  if (typeof mediaQuery.addEventListener === "function") {
    mediaQuery.addEventListener("change", checkSticky);
  } else if (typeof mediaQuery.addListener === "function") {
    mediaQuery.addListener(checkSticky);
  }

  window.addEventListener("scroll", checkSticky);
  window.addEventListener("resize", checkSticky);

  checkSticky();

  // --- Video observer ---
  const video = document.querySelector(".voc-article--detail .video");
  if (video) {
    let alreadyPlayed = false;
    const videoObserver = new IntersectionObserver((entries, obs) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && entry.intersectionRatio >= 1 && !alreadyPlayed) {
          video.play();
          alreadyPlayed = true;
          obs.unobserve(entry.target);
        }
      });
    }, { threshold: 1 });

    videoObserver.observe(video);
  }

  // --- Scrollspy nav ---
  const navLinks = document.querySelectorAll(".v-spc-nav a");

  const navObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const id = entry.target.getAttribute("id");
      const link = document.querySelector(`.v-spc-nav a[href="#${id}"]`);
      if (!link) return;

      if (entry.isIntersecting) {
        // Quitar is-active de todos
        navLinks.forEach(l => l.classList.remove("is-active"));
        // Poner is-active al enlace correspondiente
        link.classList.add("is-active");
      }
    });
  }, { threshold: 0.5 });

  sections.forEach(section => navObserver.observe(section));
});
</script>
